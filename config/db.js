// =============================================================
// üì¶ SQL Server Connection (mssql + dotenv)
// -------------------------------------------------------------
// - H·ªó tr·ª£ c·∫£ instance (SQLEXPRESS) l·∫´n port (1433)
// - T·ª± log c·∫•u h√¨nh k·∫øt n·ªëi t√≥m t·∫Øt (kh√¥ng in m·∫≠t kh·∫©u)
// - D√πng trustServerCertificate cho m√¥i tr∆∞·ªùng local
// - D·ª´ng ti·∫øn tr√¨nh n·∫øu k·∫øt n·ªëi l·ªói
// =============================================================

require("dotenv").config();
const sql = require("mssql");

// ======================
// üß≠ Chu·∫©n h√≥a gi√° tr·ªã ENV
// ======================
const DB_SERVER = process.env.DB_SERVER?.trim() || "localhost";
const DB_NAME = process.env.DB_NAME?.trim() || "PhucLongCNPMNC";
const DB_USER = process.env.DB_USER?.trim() || "phuclong_user";
const DB_PASSWORD = process.env.DB_PASSWORD?.trim() || "phuclong_pass";
const DB_PORT = process.env.DB_PORT ? parseInt(process.env.DB_PORT, 10) : 1433;
const DB_INSTANCE = process.env.DB_INSTANCE?.trim() || null;

// ======================
// ‚öôÔ∏è C·∫•u h√¨nh c∆° b·∫£n
// ======================
const config = {
  user: DB_USER,
  password: DB_PASSWORD,
  server: DB_SERVER,
  database: DB_NAME,
  options: {
    encrypt: false, // ‚ùå false cho local dev
    trustServerCertificate: true, // ‚úÖ bypass self-signed SSL
  },
};

// N·∫øu c√≥ instance name (VD: localhost\SQLEXPRESS)
if (DB_SERVER.includes("\\")) {
  // ‚ö†Ô∏è N·∫øu trong .env b·∫°n ƒë√£ ghi "localhost\SQLEXPRESS", kh√¥ng c·∫ßn port
  delete config.port;
} else if (DB_INSTANCE) {
  // ‚öôÔ∏è Ho·∫∑c n·∫øu c√≥ DB_INSTANCE ri√™ng
  delete config.port;
  config.options.instanceName = DB_INSTANCE;
} else {
  // ‚úÖ Tr∆∞·ªùng h·ª£p server: localhost, IP, ho·∫∑c hostname
  config.port = DB_PORT;
}

// ======================
// üß© K·∫øt n·ªëi & Log
// ======================
console.log("üõ†Ô∏è SQL Config:", {
  server: DB_SERVER,
  instance: DB_INSTANCE || "(none)",
  database: DB_NAME,
  user: DB_USER,
  port: config.port || "(instance mode)",
});

const poolPromise = new sql.ConnectionPool(config)
  .connect()
  .then((pool) => {
    console.log("‚úÖ K·∫øt n·ªëi SQL Server th√†nh c√¥ng");
    return pool;
  })
  .catch((err) => {
    console.error("‚ùå L·ªói k·∫øt n·ªëi DB:", err);
    console.error("üí° Ki·ªÉm tra l·∫°i .env (DB_USER, DB_PASSWORD, DB_SERVER, DB_NAME)");
    process.exit(1);
  });

module.exports = { sql, poolPromise };
